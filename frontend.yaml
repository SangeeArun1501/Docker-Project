apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp-deployment
  labels:
    app: flaskapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaskapp
  template:
    metadata:
      labels:
        app: flaskapp
    spec:
      containers:
      - name: flaskapp
        image: sangeetha1501/pythonflaskapp:latest
        ports:
        - containerPort: 8080
        env:
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "MYUsers"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: sangeetha1501/sqlapp:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        - name: MYSQL_DATABASE
          value: "MYUsers"

---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
spec:
  selector:
    app: flaskapp
  ports:
    - protocol: TCP
      port: 80  # External port for the Flask app
      targetPort: 8080  # Flask container's internal port
  type: NodePort  # Exposes the Flask service on a random high port
  nodePort: 30080  # You can specify a specific port or let Kubernetes choose

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306  # MySQL service's external port
      targetPort: 3306  # MySQL container's internal port
  type: ClusterIP  # This is the default type for internal services
